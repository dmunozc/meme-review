var CACHE_VERSION = 'v0.223';
var CACHE_NAME = ':sw-cache-' + CACHE_VERSION;
var debugSW = false;

function onInstall(event) {
  if (debugSW) {console.log('[Serviceworker]', "Installing!", event);}
  event.waitUntil(
    caches.open(CACHE_NAME).then(function prefill(cache) {
      cache.addAll([
        '<%= asset_path "logo.ico" %>',
        '<%= asset_path "logo.png" %>',
      ]);
      return cache.addAll([
        // make sure serviceworker.js is not required by application.js
        // if you want to reference application.js from here
        '/',
        '/?page=1',
        '<%= asset_path "application.js" %>',
        '<%= asset_path "application.css" %>',
        '/offline.html',
      ]);
    })
  );
}

function onActivate(event) {
  if (debugSW) {console.log('[Serviceworker]', "Activating!", event);}
  event.waitUntil(
    caches.keys().then(function(cacheNames) {
      return Promise.all(
        cacheNames.filter(function(cacheName) {
          // Return true if you want to remove this cache,
          // but remember that caches are shared across
          // the whole origin
          return cacheName.indexOf(CACHE_NAME) !== 0;
        }).map(function(cacheName) {
          return caches.delete(cacheName);
        })
      );
    })
  );
}

function onFetch(event) {
  var req = event.request;
  var requestURL = new URL(req.url);
  //only accept get reqs from us
  if (requestURL.origin == location.origin || requestURL.origin == "https://memereview-main.s3-us-west-2.amazonaws.com") {
    if (event.request.method != 'POST') {
      if (/\/\?page/.test(requestURL.href)) {
        event.respondWith(
          caches.open(CACHE_NAME).then(function(cache) {
            return fetch(event.request)
            .then(function(response){
              cache.put(event.request, response.clone());
              return response;
            })
            .catch(function(error) {
              return caches.match(event.request).then(function(response) {
                return response || caches.match("/offline.html");
              })
            })
          })
        );
      }else{
        event.respondWith(
          caches.open(CACHE_NAME).then(function(cache) {
            return cache.match(event.request).then(function (response) {
              return response || fetch(event.request).then(function(response) {
                cache.put(event.request, response.clone());
                return response;
              });
            });
          })
        );
      }
    }
  }
  
}

self.addEventListener('install', onInstall);
self.addEventListener('activate', onActivate);
self.addEventListener('fetch', onFetch);
self.addEventListener('message', function(event){
  if (debugSW) {console.log(event.data);}
  if (event.data.action == "skipWaiting"){
    self.skipWaiting();
  }
});

self.addEventListener('push', function(event) {
  if (debugSW) {console.log('[Serviceworker]', "Push!", event);}
  const title = 'MemeüëèReviewüëè';
  const options = {
    body: event.data.text()
  };

  event.waitUntil(self.registration.showNotification(title, options));
});
self.addEventListener('notificationclick', function(event) {

  event.notification.close();

  event.waitUntil(
    clients.openWindow('https://memereview.app')
  );
});